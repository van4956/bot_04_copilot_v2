version: '3.9'

services:
  bot:
    build: .
    container_name: container_bot
    depends_on:
      db:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - BOT_TOKEN_TEST=${BOT_TOKEN_TEST}
      - OWNER=${OWNER}
      - ADMIN_LIST=${ADMIN_LIST}
      - HOME_GROUP=${HOME_GROUP}
      - WORK_GROUP=${WORK_GROUP}
      - PAYMASTER_PROVIDER_TOKEN=${PAYMASTER_PROVIDER_TOKEN}
      - API_GPT=${API_GPT}
      - API_WEATHER=${API_WEATHER}
      - API_CURRENCY=${API_CURRENCY}
      - DB_POST=${DB_POST}
      - DB_LITE=${DB_LITE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - botnet # Подключение к сети botnet
    restart: unless-stopped # Автоматический перезапуск контейнера, если он остановится

  db:
    image: postgres:15 # Образ PostgreSQL версии 15
    container_name: container_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./database/postgres/db:/var/lib/postgresql/data # Сохраняем данные базы данных на локальном диске
    ports:
      - "5432:5432"
    networks:
      - botnet
    restart: unless-stopped

networks:
  botnet:
    name: botnet    # Принудительно задаем имя сети
    driver: bridge # Используем драйвер bridge для создания сети
